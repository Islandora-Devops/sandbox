variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      groups:
        - docker
      # Paste the contents of Digital Ocean "default" public key in this field.
      # Consult Bitwarden.
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC92mfUd/zMuzWqAod/xuqrE2to4ae1cRiknK81uMHfVHpXoxx2xM7PkmMsO9ShQtWsu0V0q4A9kozzv22HVDL51iVapESrM4q2KWiDHnE45U8RH/DDRX5NdW3+GvNQk2ITyHR4CVpvwYXCYfI4bha4R4jF7oc7pDmLcgcYN+9OSptUnWUbxqiWqfuwWSmux9N1HHiVDTt/2W8qgszAzwXI64ooK5pkU7KSXQ9A/w4Ra/xmZioCKAB4MZh5HIwNoVgZ8OCXLBL66cQTJEQnmkCc3rVeHikBhvUxCnKWGmdjcBG/XGxqHIQ1HVn7GSlclJ8hGISZZcBaB4RVFCUK4i8tvKbM1dHNyNnZGAWJUCMQDH8Dkx8wnOAWdq4ed1cd16Jt3y4cEcHEUSXmZmViYMNHbqqL+yaj3nhCDIwa7CzoVLZ4Vj8xOvn/X2JMaLPhJFY//5Y6Dep01Nm+4d0Xf4gYo3H6Hmo/jBeXO/VRPHKbbZIMlA04mrlClosgUqkm+cE=
systemd:
  units:
    #- name: var-opt-sandbox-acme.mount
    #  enabled: true
    #  contents: |
    #    [Unit]
    #    Description=Mount DigitalOcean Volume at /opt/sandbox/acme
    #    Requires=local-fs.target
    #    After=local-fs.target
#
    #    [Mount]
    #    What=/dev/disk/by-id/scsi-0DO_Volume_${VOLUME_NAME}
    #    Where=/opt/sandbox/acme
    #    Type=ext4
    #    Options=defaults
#
    #    [Install]
    #    WantedBy=multi-user.target
    - name: install-docker-compose.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Docker Compose
        Requires=docker.service
        After=docker.service

        [Service]
        User=root
        Group=root
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/usr/bin/sh -ec "mkdir -p /usr/local/lib/docker/cli-plugins && curl -L https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose && chmod a+x /usr/local/lib/docker/cli-plugins/docker-compose"

        [Install]
        WantedBy=multi-user.target
    - name: rake.service
      enabled: true
      contents: |
        [Unit]
        Description=Rake Sandbox
        Requires=docker.service
        After=docker.service

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/systemctl try-restart sandbox.service

        [Install]
        WantedBy=multi-user.target
    - name: rake.timer
      enabled: true
      contents: |
        [Unit]
        Description=Rake Sandbox Timer

        [Timer]
        OnCalendar=*-*-* 1:00:00 America/Halifax
        Persistent=True

        [Install]
        WantedBy=timers.target
    - name: sandbox.service
      enabled: true
      contents: |
        [Unit]
        Description= Islandora Sandbox
        PartOf=docker.service
        After=docker.service
        Requires=install-docker-compose.service
        After=install-docker-compose.service
        Requires=var-opt-sandbox-acme.mount
        After=var-opt-sandbox-acme.mount

        [Service]
        User=core
        Group=core
        WorkingDirectory=/opt/sandbox
        ExecStartPre=/usr/bin/docker compose down -v
        ExecStart=/usr/bin/docker compose up
        ExecStop=/usr/bin/docker compose down -v

        [Install]
        WantedBy=multi-user.target
storage:
  directories:
    - path: /usr/local/lib/docker/cli-plugins
      mode: 0755
      user:
        name: root
      group:
        name: root
    - path: /opt/sandbox
      mode: 0755
      user:
        name: core
      group:
        name: core
    - path: /opt/sandbox/acme
      mode: 0755
      user:
        name: core
      group:
        name: core
  files:
    # Disable auto-updates.
    - path: /etc/zincati/config.d/90-disable-auto-updates.toml
      mode: 0644
      contents:
        inline: |
          [updates]
          enabled = false
    - path: /etc/ssh/sshd_config.d/60-packer.conf
      mode: 0600
      contents:
        inline: |
          PermitRootLogin no
          AllowUsers core
          AuthenticationMethods publickey
          PubkeyAcceptedKeyTypes +ssh-rsa
          PubkeyAcceptedAlgorithms +ssh-rsa
    - path: /opt/sandbox/.env
      mode: 0644
      user:
        name: core
      group:
        name: core
      contents:
        inline: |
          DIGITALOCEAN_API_TOKEN=${DIGITALOCEAN_API_TOKEN}
          DOMAIN=${DOMAIN}
          ISLANDORA_REPOSITORY=${ISLANDORA_REPOSITORY}
          ISLANDORA_TAG=${ISLANDORA_TAG}
          REPOSITORY=${REPOSITORY}
          TAG=${TAG}
    - path: /opt/sandbox/docker-compose.yml
      mode: 0644
      user:
        name: core
      group:
        name: core
      contents:
        local: docker-compose.yml
  filesystems:
    # To prevent issues with rate limits on certificate generation, we persist generated certificates to a volume.
    - path: /var/opt/sandbox/acme
      device: /dev/disk/by-id/scsi-0DO_Volume_${VOLUME_NAME}
      format: ext4
      with_mount_unit: true
      wipe_filesystem: false
